<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="9" failed="0" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-10-15T15:28:58 ICT" name="Default suite" finished-at="2020-10-15T15:29:09 ICT" duration-ms="11433">
    <groups>
      <group name="no">
        <method signature="NewTest.f1(java.lang.String, java.lang.String)[pri:0, instance:ex.NewTest@19d481b]" name="f1" class="ex.NewTest"/>
      </group> <!-- no -->
      <group name="test">
        <method signature="NewTest.a(java.lang.String)[pri:0, instance:ex.NewTest@19d481b]" name="a" class="ex.NewTest"/>
      </group> <!-- test -->
      <group name="testjson">
        <method signature="NewTest.b(java.lang.String)[pri:0, instance:ex.NewTest@19d481b]" name="b" class="ex.NewTest"/>
      </group> <!-- testjson -->
      <group name="asrx">
        <method signature="NewTest.a(java.lang.String)[pri:0, instance:ex.NewTest@19d481b]" name="a" class="ex.NewTest"/>
      </group> <!-- asrx -->
    </groups>
    <test started-at="2020-10-15T15:28:58 ICT" name="Default test" finished-at="2020-10-15T15:29:09 ICT" duration-ms="11433">
      <class name="ex.NewTest">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:ex.NewTest@19d481b]" started-at="2020-10-15T15:28:58 ICT" name="beforeTest" finished-at="2020-10-15T15:29:01 ICT" duration-ms="3063" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="a(java.lang.String)[pri:0, instance:ex.NewTest@19d481b]" started-at="2020-10-15T15:29:01 ICT" name="a" data-provider="dataFromExcel2" finished-at="2020-10-15T15:29:04 ICT" duration-ms="2937" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[dsfagrgg]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a -->
        <test-method signature="a(java.lang.String)[pri:0, instance:ex.NewTest@19d481b]" started-at="2020-10-15T15:29:04 ICT" name="a" data-provider="dataFromExcel2" finished-at="2020-10-15T15:29:05 ICT" duration-ms="546" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sfafsf]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a -->
        <test-method signature="a(java.lang.String)[pri:0, instance:ex.NewTest@19d481b]" started-at="2020-10-15T15:29:05 ICT" name="a" data-provider="dataFromExcel2" finished-at="2020-10-15T15:29:05 ICT" duration-ms="570" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[123test]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a -->
        <test-method signature="a(java.lang.String)[pri:0, instance:ex.NewTest@19d481b]" started-at="2020-10-15T15:29:05 ICT" name="a" data-provider="dataFromExcel2" finished-at="2020-10-15T15:29:06 ICT" duration-ms="482" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Pajsmth]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a -->
        <test-method signature="a(java.lang.String)[pri:0, instance:ex.NewTest@19d481b]" started-at="2020-10-15T15:29:06 ICT" name="a" data-provider="dataFromExcel2" finished-at="2020-10-15T15:29:06 ICT" duration-ms="478" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[fglPi^%%*2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a -->
        <test-method signature="b(java.lang.String)[pri:0, instance:ex.NewTest@19d481b]" started-at="2020-10-15T15:29:06 ICT" name="b" data-provider="dataFromJson" finished-at="2020-10-15T15:29:06 ICT" duration-ms="0" status="SKIP">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[com.google.gson.JsonSyntaxException: com.google.gson.stream.MalformedJsonException: Expected name at line 6 column 6 path $.dataSet[0].String]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: com.google.gson.JsonSyntaxException: com.google.gson.stream.MalformedJsonException: Expected name at line 6 column 6 path $.dataSet[0].String
at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:49)
at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:145)
at org.testng.internal.Parameters.handleParameters(Parameters.java:797)
at org.testng.internal.Parameters.handleParameters(Parameters.java:740)
at org.testng.internal.ParameterHandler.handleParameters(ParameterHandler.java:59)
at org.testng.internal.ParameterHandler.createParameters(ParameterHandler.java:38)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:789)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: com.google.gson.JsonSyntaxException: com.google.gson.stream.MalformedJsonException: Expected name at line 6 column 6 path $.dataSet[0].String
at com.google.gson.internal.Streams.parse(Streams.java:60)
at com.google.gson.JsonParser.parseReader(JsonParser.java:85)
at com.google.gson.JsonParser.parseReader(JsonParser.java:60)
at com.google.gson.JsonParser.parse(JsonParser.java:104)
at ex.DataReader.getDataJson(DataReader.java:93)
at ex.NewTest.dataFromJson(NewTest.java:38)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:76)
at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:45)
... 25 more
Caused by: com.google.gson.stream.MalformedJsonException: Expected name at line 6 column 6 path $.dataSet[0].String
at com.google.gson.stream.JsonReader.syntaxError(JsonReader.java:1564)
at com.google.gson.stream.JsonReader.doPeek(JsonReader.java:506)
at com.google.gson.stream.JsonReader.hasNext(JsonReader.java:415)
at com.google.gson.internal.bind.TypeAdapters$29.read(TypeAdapters.java:722)
at com.google.gson.internal.bind.TypeAdapters$29.read(TypeAdapters.java:715)
at com.google.gson.internal.bind.TypeAdapters$29.read(TypeAdapters.java:723)
at com.google.gson.internal.bind.TypeAdapters$29.read(TypeAdapters.java:698)
at com.google.gson.internal.Streams.parse(Streams.java:48)
... 37 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- b -->
        <test-method signature="f1(java.lang.String, java.lang.String)[pri:0, instance:ex.NewTest@19d481b]" started-at="2020-10-15T15:29:06 ICT" name="f1" data-provider="dataFromExcel" finished-at="2020-10-15T15:29:07 ICT" duration-ms="815" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f1 -->
        <test-method signature="f1(java.lang.String, java.lang.String)[pri:0, instance:ex.NewTest@19d481b]" started-at="2020-10-15T15:29:07 ICT" name="f1" data-provider="dataFromExcel" finished-at="2020-10-15T15:29:08 ICT" duration-ms="497" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[123]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[222]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f1 -->
        <test-method signature="f1(java.lang.String, java.lang.String)[pri:0, instance:ex.NewTest@19d481b]" started-at="2020-10-15T15:29:08 ICT" name="f1" data-provider="dataFromExcel" finished-at="2020-10-15T15:29:08 ICT" duration-ms="475" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f1 -->
        <test-method signature="f1(java.lang.String, java.lang.String)[pri:0, instance:ex.NewTest@19d481b]" started-at="2020-10-15T15:29:08 ICT" name="f1" data-provider="dataFromExcel" finished-at="2020-10-15T15:29:09 ICT" duration-ms="483" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f1 -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:ex.NewTest@19d481b]" started-at="2020-10-15T15:29:09 ICT" name="afterTest" finished-at="2020-10-15T15:29:09 ICT" duration-ms="678" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- ex.NewTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
